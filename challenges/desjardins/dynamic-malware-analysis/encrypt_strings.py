from itertools import cycle

from strings import STRINGS

encrypted_strings = []


def en(data: bytes, key: bytes) -> bytes:
    A = bytearray(data)
    B = bytearray(key)
    C = zip(A, cycle(B))
    return bytearray(a^b for a, b in C)


k = b"\x9a\x3f\xce\x33\x9e\x3a\x9f\x6c\xc9\x38\x9e\x3f\x9c\x68\x92\x6e\xcb\x3f\x92\x69\xcb\x6b\x98\x3e\xcc\x3a\x9f\x68\xce\x3f\xcb\x3a\x92\x69\xc9\x3c\x9f\x6c\xcf\x6e\xc9\x68\xce\x68\xcc\x3c\x9a\x6b\xcf\x3a\x9f\x3a\x9b\x6f\xcc\x33\x9c\x39\xcb\x6e\xce\x39\xce\x39"
for i, string in enumerate(STRINGS):
    k2 = en((f"{((i*9 + 4 +5) % 9)+1}"*len(k)).encode('utf-8'), k)
    data = en(bytes(string, encoding='utf-8'), k2)
    encrypted_strings.append(data)

for e in encrypted_strings:
    print(e)
