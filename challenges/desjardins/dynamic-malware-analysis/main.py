from itertools import cycle

import requests

from es import STRINGS
import pip_system_certs.bootstrap
import pip_system_certs.wrapt_requests

# Debug
v = False
k = b"\x9a\x3f\xce\x33\x9e\x3a\x9f\x6c\xc9\x38\x9e\x3f\x9c\x68\x92\x6e\xcb\x3f\x92\x69\xcb\x6b\x98\x3e\xcc\x3a\x9f\x68\xce\x3f\xcb\x3a\x92\x69\xc9\x3c\x9f\x6c\xcf\x6e\xc9\x68\xce\x68\xcc\x3c\x9a\x6b\xcf\x3a\x9f\x3a\x9b\x6f\xcc\x33\x9c\x39\xcb\x6e\xce\x39\xce\x39"


def en(data: bytes, key: bytes) -> bytes:
    A = bytearray(data)
    B = bytearray(key)
    C = zip(A, B)
    return bytearray(a^b for a, b in C)


def u(s, i):
    k2 = en((f"{((i*9 + 4 +5) % 9)+1}"*len(k)).encode('utf-8'), k)
    return en(s, k2).decode('utf-8')


if __name__ == '__main__':
    try:
        # Flag 1 & 2
        r = requests.get(f"{u(STRINGS[0], 0)}{u(STRINGS[4], 4)}",
                         proxies={u(STRINGS[2], 2): u(STRINGS[1], 1), u(STRINGS[3], 3): u(STRINGS[1], 1)})
        if v:
            print(r)

        # Flag 3
        r = requests.get(f"{u(STRINGS[5], 5)}{u(STRINGS[6], 6)}{u(STRINGS[6], 6)}{u(STRINGS[6], 6)}",
                         proxies={u(STRINGS[2], 2): u(STRINGS[1], 1), u(STRINGS[3], 3): u(STRINGS[1], 1)},
                         verify=True)
        if v:
            print(r)

        # Flag 4
        r = requests.get(f"{u(STRINGS[7], 7)}",
                         proxies={u(STRINGS[2], 2): u(STRINGS[1], 1), u(STRINGS[3], 3): u(STRINGS[1], 3)},
                         verify=True)
        if r.text and r.text == "None":

            r = requests.get(f"{u(STRINGS[8], 8)}{u(STRINGS[10], 10)}{u(STRINGS[10], 10)}{u(STRINGS[9], 9)}",
                             proxies={u(STRINGS[2], 2): u(STRINGS[1], 1), u(STRINGS[3], 3): u(STRINGS[1], 3)},
                             verify=True)
            if v:
                print(r)
    except Exception as e:
        if v:
            raise e
